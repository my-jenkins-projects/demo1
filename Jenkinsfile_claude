pipeline {
    agent any
    tools {
        maven 'Maven3.9.6'
    }
    stages {
        stage('1.Clone') {
            steps {
                git 'https://github.com/claudedevops/maven-web-application.git'
            }
        }
        stage('2.Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('3.Static Code Analysis') {
            environment {
                SONAR_URL = 'http://54.183.188.81:9001'
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_TOKEN')]) {
                sh 'mvn sonar:sonar -Dsonar.login=${SONAR_TOKEN} -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('4.Upload Artifacts') {
            environment {
                NEXUS_URL = 'http://54.177.249.246:8081/repository/clauderepo/'
            }
            steps {
                sh 'mvn deploy -DrepositoryId=nexus -DaltDeploymentRepository=nexus::${NEXUS_URL}'
            }
        }
        stage('5.Build, Tag, and Publish') {
            environment {
                DOCKER_IMAGE = 'gforce'
                DOCKER_TAG = 'latest'
                DOCKER_REGISTRY = 'docker.io'
                MY_REPO = 'claudeeke/maven-web-app'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                sh 'docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .'
                sh 'docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}'
                sh 'docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${MY_REPO}'
                sh 'docker push ${MY_REPO}'
                }
            }
        }
        stage('6.Deploy to Production') {
            steps {
                sh 'kubectl apply -f gforce.yaml'
            }
        }
    }
}
